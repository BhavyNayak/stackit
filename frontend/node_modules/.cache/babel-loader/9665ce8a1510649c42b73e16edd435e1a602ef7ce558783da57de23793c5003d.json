{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Satyadevsinh\\\\Desktop\\\\StackIT\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport apiService from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'SET_USER':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case 'SET_TOKEN':\n      return {\n        ...state,\n        token: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: true\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      const userStr = localStorage.getItem('user');\n      if (token && userStr) {\n        try {\n          dispatch({\n            type: 'SET_TOKEN',\n            payload: token\n          });\n          const user = JSON.parse(userStr);\n          dispatch({\n            type: 'SET_USER',\n            payload: user\n          });\n\n          // Verify token with backend\n          const response = await apiService.getCurrentUser();\n          if (response.data) {\n            dispatch({\n              type: 'UPDATE_USER',\n              payload: response.data\n            });\n            localStorage.setItem('user', JSON.stringify(response.data));\n          }\n        } catch (error) {\n          console.error('Token validation failed:', error);\n          logout();\n        }\n      } else {\n        dispatch({\n          type: 'SET_LOADING',\n          payload: false\n        });\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = async credentials => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await apiService.login(credentials);\n      if (response.data) {\n        const {\n          user,\n          token\n        } = response.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        dispatch({\n          type: 'SET_TOKEN',\n          payload: token\n        });\n        dispatch({\n          type: 'SET_USER',\n          payload: user\n        });\n        toast.success('Successfully logged in!');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n  const register = async credentials => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await apiService.register(credentials);\n      if (response.data) {\n        const {\n          user,\n          token\n        } = response.data;\n        localStorage.setItem('token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        dispatch({\n          type: 'SET_TOKEN',\n          payload: token\n        });\n        dispatch({\n          type: 'SET_USER',\n          payload: user\n        });\n        toast.success('Account created successfully!');\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      toast.error(message);\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch({\n      type: 'LOGOUT'\n    });\n    toast.success('Logged out successfully');\n  };\n  const updateUser = user => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: user\n    });\n    localStorage.setItem('user', JSON.stringify(user));\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","apiService","toast","jsxDEV","_jsxDEV","AuthContext","undefined","authReducer","state","action","type","isLoading","payload","user","isAuthenticated","token","initialState","AuthProvider","children","_s","dispatch","initializeAuth","localStorage","getItem","userStr","JSON","parse","response","getCurrentUser","data","setItem","stringify","error","console","logout","login","credentials","success","_error$response","_error$response$data","message","register","_error$response2","_error$response2$data","removeItem","updateUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Satyadevsinh/Desktop/StackIT/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect, ReactNode } from 'react';\r\nimport { User, AuthState, LoginCredentials, RegisterCredentials } from '../types';\r\nimport apiService from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\ninterface AuthContextType extends AuthState {\r\n  login: (credentials: LoginCredentials) => Promise<void>;\r\n  register: (credentials: RegisterCredentials) => Promise<void>;\r\n  logout: () => void;\r\n  updateUser: (user: User) => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\ntype AuthAction =\r\n  | { type: 'SET_LOADING'; payload: boolean }\r\n  | { type: 'SET_USER'; payload: User }\r\n  | { type: 'SET_TOKEN'; payload: string }\r\n  | { type: 'LOGOUT' }\r\n  | { type: 'UPDATE_USER'; payload: User };\r\n\r\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return { ...state, isLoading: action.payload };\r\n    case 'SET_USER':\r\n      return { ...state, user: action.payload, isAuthenticated: true, isLoading: false };\r\n    case 'SET_TOKEN':\r\n      return { ...state, token: action.payload };\r\n    case 'LOGOUT':\r\n      return { user: null, token: null, isAuthenticated: false, isLoading: false };\r\n    case 'UPDATE_USER':\r\n      return { ...state, user: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState: AuthState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  isLoading: true,\r\n};\r\n\r\nexport const AuthProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      const userStr = localStorage.getItem('user');\r\n\r\n      if (token && userStr) {\r\n        try {\r\n          dispatch({ type: 'SET_TOKEN', payload: token });\r\n          const user = JSON.parse(userStr);\r\n          dispatch({ type: 'SET_USER', payload: user });\r\n          \r\n          // Verify token with backend\r\n          const response = await apiService.getCurrentUser();\r\n          if (response.data) {\r\n            dispatch({ type: 'UPDATE_USER', payload: response.data });\r\n            localStorage.setItem('user', JSON.stringify(response.data));\r\n          }\r\n        } catch (error) {\r\n          console.error('Token validation failed:', error);\r\n          logout();\r\n        }\r\n      } else {\r\n        dispatch({ type: 'SET_LOADING', payload: false });\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = async (credentials: LoginCredentials) => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      const response = await apiService.login(credentials);\r\n      \r\n      if (response.data) {\r\n        const { user, token } = response.data;\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        \r\n        dispatch({ type: 'SET_TOKEN', payload: token });\r\n        dispatch({ type: 'SET_USER', payload: user });\r\n        \r\n        toast.success('Successfully logged in!');\r\n      }\r\n    } catch (error: any) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const register = async (credentials: RegisterCredentials) => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      const response = await apiService.register(credentials);\r\n      \r\n      if (response.data) {\r\n        const { user, token } = response.data;\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        \r\n        dispatch({ type: 'SET_TOKEN', payload: token });\r\n        dispatch({ type: 'SET_USER', payload: user });\r\n        \r\n        toast.success('Account created successfully!');\r\n      }\r\n    } catch (error: any) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    dispatch({ type: 'LOGOUT' });\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateUser = (user: User) => {\r\n    dispatch({ type: 'UPDATE_USER', payload: user });\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  };\r\n\r\n  const value: AuthContextType = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateUser,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}